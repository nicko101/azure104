{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "servers_nf_sql_db1_name": {
            "defaultValue": "nf-sql-db1",
            "type": "String"
        },
        "loadBalancers_nf_lb_name": {
            "defaultValue": "nf-lb",
            "type": "String"
        },
        "virtualMachines_testvm_name": {
            "defaultValue": "testvm",
            "type": "String"
        },
        "publicIPAddresses_nf_fe_ip_name": {
            "defaultValue": "nf-fe-ip",
            "type": "String"
        },
        "networkInterfaces_testvm812_name": {
            "defaultValue": "testvm812",
            "type": "String"
        },
        "virtualNetworks_testvm_vnet_name": {
            "defaultValue": "testvm-vnet",
            "type": "String"
        },
        "privateEndpoints_home_lab_pe2_name": {
            "defaultValue": "home-lab-pe2",
            "type": "String"
        },
        "bastionHosts_testvm_vnet_bastion_name": {
            "defaultValue": "testvm-vnet-bastion",
            "type": "String"
        },
        "publicIPAddresses_testvm_vnet_ip_name": {
            "defaultValue": "testvm-vnet-ip",
            "type": "String"
        },
        "networkSecurityGroups_nf_nsg_open_name": {
            "defaultValue": "nf-nsg-open",
            "type": "String"
        },
        "publicIPAddresses_testvmvnetip126_name": {
            "defaultValue": "testvmvnetip126",
            "type": "String"
        },
        "privateLinkServices_nf_privatelink_name": {
            "defaultValue": "nf-privatelink",
            "type": "String"
        },
        "networkInterfaces_nf_privatelink_nic_dba4ad99_32a2_4511_b95e_aaaaf70e8c5a_name": {
            "defaultValue": "nf-privatelink.nic.dba4ad99-32a2-4511-b95e-aaaaf70e8c5a",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkSecurityGroups_nf_nsg_open_name')]",
            "location": "westeurope",
            "tags": {
                "owner": "nick fennell"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAnyCustomAnyInbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_nf_nsg_open_name'), 'AllowAnyCustomAnyInbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustomAnyOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_nf_nsg_open_name'), 'AllowAnyCustomAnyOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_nf_fe_ip_name')]",
            "location": "westeurope",
            "tags": {
                "owner": "nick fennell"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.81.4.175",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_testvm_vnet_ip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "40.68.251.155",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_testvmvnetip126_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.95.171.125",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2023-08-01-preview",
            "name": "[parameters('servers_nf_sql_db1_name')]",
            "location": "westeurope",
            "tags": {
                "owner": "nick fennell"
            },
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "azureuser",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_testvm_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm812_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_testvm_name'), '_OsDisk_1_7c61fad8ed084a8298909640068be0a7')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_testvm_name'), '_OsDisk_1_7c61fad8ed084a8298909640068be0a7'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_testvm_name')]",
                    "adminUsername": "azureuser",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm812_name'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Server"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2024-01-01",
            "name": "[parameters('loadBalancers_nf_lb_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_nf_fe_ip_name'))]"
            ],
            "tags": {
                "owner": "nick fennell"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "nf-fe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_nf_fe_ip_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "nf-backend",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "NF-RG_testvm812ipconfig1",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "in",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/loadBalancingRules/in')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/probes/probe')]"
                            }
                        }
                    },
                    {
                        "name": "in-3389",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/loadBalancingRules/in-3389')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]"
                            },
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/probes/probe')]"
                            }
                        }
                    },
                    {
                        "name": "1433-in",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/loadBalancingRules/1433-in')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]"
                            },
                            "frontendPort": 1433,
                            "backendPort": 1433,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/probes/probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "probe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/probes/probe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1,
                            "probeThreshold": 1,
                            "noHealthyBackendsBehavior": "AllProbedDown"
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [
                    {
                        "name": "out",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/outboundRules/out')]",
                        "properties": {
                            "allocatedOutboundPorts": 0,
                            "protocol": "All",
                            "enableTcpReset": true,
                            "idleTimeoutInMinutes": 4,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                            },
                            "frontendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]"
                                }
                            ]
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('loadBalancers_nf_lb_name'), '/nf-backend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "NF-RG_testvm812ipconfig1",
                        "properties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_nf_nsg_open_name'), '/AllowAnyCustomAnyInbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_nf_nsg_open_name'), '/AllowAnyCustomAnyOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateLinkServices/privateEndpointConnections",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('privateLinkServices_nf_privatelink_name'), '/home-lab-pe.6be0f758-a491-4c97-ad6e-d9ff393ee1db')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Approved",
                    "actionsRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateLinkServices/privateEndpointConnections",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('privateLinkServices_nf_privatelink_name'), '/home-lab-pe2.a9c420a0-8074-47a6-a76d-b06de91e9431')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto Approved",
                    "actionsRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_testvm_vnet_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.88.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "test-vm",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]",
                        "properties": {
                            "addressPrefix": "10.88.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefix": "10.88.1.0/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_testvm_vnet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_testvm_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.88.1.0/26",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/default')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_nf_sql_db1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_nf_sql_db1_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2024-01-01",
            "name": "[parameters('bastionHosts_testvm_vnet_bastion_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testvmvnetip126_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-63100e31-67c7-4d08-9e64-65dbf89e3fcc.bastion.azure.com",
                "scaleUnits": 2,
                "enableTunneling": false,
                "enableIpConnect": false,
                "disableCopyPaste": false,
                "enableShareableLink": false,
                "enableKerberos": false,
                "enableSessionRecording": false,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "id": "[concat(resourceId('Microsoft.Network/bastionHosts', parameters('bastionHosts_testvm_vnet_bastion_name')), '/bastionHostIpConfigurations/IpConf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testvmvnetip126_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkInterfaces_nf_privatelink_nic_dba4ad99_32a2_4511_b95e_aaaaf70e8c5a_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]",
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]"
            ],
            "tags": {
                "owner": "nick fennell"
            },
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "test-vm-1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nf_privatelink_nic_dba4ad99_32a2_4511_b95e_aaaaf70e8c5a_name')), '/ipConfigurations/test-vm-1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.88.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "privateLinkService": {
                    "id": "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkInterfaces_testvm812_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm812_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.88.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_nf_lb_name'), 'nf-backend')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-01-01",
            "name": "[parameters('privateEndpoints_home_lab_pe2_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
            ],
            "tags": {
                "owner": "nick fennell"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_home_lab_pe2_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_home_lab_pe2_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_home_lab_pe2_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name'))]",
                            "groupIds": [],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_home_lab_pe2_name'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateLinkServices",
            "apiVersion": "2024-01-01",
            "name": "[parameters('privateLinkServices_nf_privatelink_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
            ],
            "tags": {
                "owner": "nick fennell"
            },
            "properties": {
                "fqdns": [],
                "visibility": {
                    "subscriptions": [
                        "e11e6f4a-db1f-4f2c-a703-264333f8cfc4"
                    ]
                },
                "autoApproval": {
                    "subscriptions": [
                        "e11e6f4a-db1f-4f2c-a703-264333f8cfc4"
                    ]
                },
                "enableProxyProtocol": false,
                "loadBalancerFrontendIpConfigurations": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_nf_lb_name')), '/frontendIPConfigurations/nf-fe')]"
                    }
                ],
                "ipConfigurations": [
                    {
                        "name": "test-vm-1",
                        "id": "[concat(resourceId('Microsoft.Network/privateLinkServices', parameters('privateLinkServices_nf_privatelink_name')), '/ipConfigurations/test-vm-1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testvm_vnet_name'), 'test-vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_testvm_vnet_name'), '/test-vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_testvm_vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.88.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nf_nsg_open_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
            }
        }
    ]
}
