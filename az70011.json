{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_AZ_LAB_name": {
            "defaultValue": "AZ-LAB",
            "type": "String"
        },
        "azureFirewalls_azfw_name": {
            "defaultValue": "azfw",
            "type": "String"
        },
        "virtualNetworks_HUB_name": {
            "defaultValue": "HUB",
            "type": "String"
        },
        "virtualMachines_testvm_name": {
            "defaultValue": "testvm",
            "type": "String"
        },
        "publicIPAddresses_fwip_name": {
            "defaultValue": "fwip",
            "type": "String"
        },
        "publicIPAddresses_GWIP_name": {
            "defaultValue": "GWIP",
            "type": "String"
        },
        "sshPublicKeys_testvm_key_name": {
            "defaultValue": "testvm_key",
            "type": "String"
        },
        "bastionHosts_HUB_bastion_name": {
            "defaultValue": "HUB-bastion",
            "type": "String"
        },
        "localNetworkGateways_LGW_name": {
            "defaultValue": "LGW",
            "type": "String"
        },
        "publicIPAddresses_fwmgmt_name": {
            "defaultValue": "fwmgmt",
            "type": "String"
        },
        "firewallPolicies_fwpolicy1_name": {
            "defaultValue": "fwpolicy1",
            "type": "String"
        },
        "routeTables_fw_route_table_name": {
            "defaultValue": "fw_route_table",
            "type": "String"
        },
        "networkInterfaces_testvm974_name": {
            "defaultValue": "testvm974",
            "type": "String"
        },
        "virtualNetworkGateways_VPNGW_name": {
            "defaultValue": "VPNGW",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2024-07-01",
            "name": "[parameters('sshPublicKeys_testvm_key_name')]",
            "location": "northeurope",
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDidkp4kbMVzq8QG9zMrPfkKe1WWf7kPGUVBgHLp81mm5h6siNEym+ek8l8Fb0NPwbiqnlrKhHyGZEp1511XF3D1uYw9SyGinAyVxBtEgeti8hwsMzWBUbEz3IZMq5FPmcXrBNpperVAn6fUcmK+ZOZFfz1MbzXKNLWSM5m3tvUBB4pDcGsR/gZgMo+mxNGuLbI8f2USOcaexm/e5dH6BlqGkNLHL+heAnr8xNK45sczQqnEBfIjoHXkEMULuDsAUjAL8lEoyHlMZ20oNx7OvaNNIdPjNcD8mX6faJObq0r0QYBzWHtzVrAQP8I/pxhfZRj789KfgFtrLRzYFSdhql8hVbkR8OELL2RokBqrD3ZwooS650kfx6kEqBxWT61XJGcf+jd1t5pgCT/g/iiJK/galoj7tR3JHxXbcFHwFPSGjB1wHN9rSrui+Y+SDXHdZj11IkYTc0Kf/u18ZCA3+sz9ccO4swUDrrKPS/EYA2XTPW3xcTW4I82r64v+81514k= generated-by-azure"
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2024-01-01",
            "name": "[parameters('firewallPolicies_fwpolicy1_name')]",
            "location": "northeurope",
            "properties": {
                "sku": {
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "threatIntelWhitelist": {
                    "fqdns": [],
                    "ipAddresses": []
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2024-01-01",
            "name": "[parameters('localNetworkGateways_LGW_name')]",
            "location": "northeurope",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/8",
                        "192.168.0.0/24"
                    ]
                },
                "gatewayIpAddress": "37.228.232.195"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_fwip_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.178.156.115",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_fwmgmt_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.178.159.184",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_GWIP_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.178.216.71",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-01-01",
            "name": "[parameters('routeTables_fw_route_table_name')]",
            "location": "northeurope",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "default_route",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_fw_route_table_name'), 'default_route')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "172.16.2.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_testvm_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm974_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_testvm_name'), '_disk1_7a41114560684c54bfcab907381c812f')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_testvm_name'), '_disk1_7a41114560684c54bfcab907381c812f'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_testvm_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDidkp4kbMVzq8QG9zMrPfkKe1WWf7kPGUVBgHLp81mm5h6siNEym+ek8l8Fb0NPwbiqnlrKhHyGZEp1511XF3D1uYw9SyGinAyVxBtEgeti8hwsMzWBUbEz3IZMq5FPmcXrBNpperVAn6fUcmK+ZOZFfz1MbzXKNLWSM5m3tvUBB4pDcGsR/gZgMo+mxNGuLbI8f2USOcaexm/e5dH6BlqGkNLHL+heAnr8xNK45sczQqnEBfIjoHXkEMULuDsAUjAL8lEoyHlMZ20oNx7OvaNNIdPjNcD8mX6faJObq0r0QYBzWHtzVrAQP8I/pxhfZRj789KfgFtrLRzYFSdhql8hVbkR8OELL2RokBqrD3ZwooS650kfx6kEqBxWT61XJGcf+jd1t5pgCT/g/iiJK/galoj7tR3JHxXbcFHwFPSGjB1wHN9rSrui+Y+SDXHdZj11IkYTc0Kf/u18ZCA3+sz9ccO4swUDrrKPS/EYA2XTPW3xcTW4I82r64v+81514k= generated-by-azure"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByPlatform",
                            "automaticByPlatformSettings": {
                                "rebootSetting": "IfRequired"
                            },
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm974_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2024-01-01",
            "name": "[parameters('bastionHosts_HUB_bastion_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]"
            ],
            "sku": {
                "name": "Developer"
            },
            "properties": {
                "dnsName": "omnibrain.northeurope.bastionglobal.azure.com",
                "scaleUnits": 2,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]"
                },
                "ipConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('firewallPolicies_fwpolicy1_name'), '/DefaultApplicationRuleCollectionGroup')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_fwpolicy1_name'))]"
            ],
            "properties": {
                "priority": 300,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "anyany",
                                "protocols": [
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    },
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "172.16.1.0/24"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "httpHeadersToInsert": []
                            }
                        ],
                        "name": "allowgoogle",
                        "priority": 101
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('firewallPolicies_fwpolicy1_name'), '/DefaultDnatRuleCollectionGroup')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_fwpolicy1_name'))]"
            ],
            "properties": {
                "priority": 100,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "rules": [
                            {
                                "ruleType": "NatRule",
                                "name": "nginx",
                                "translatedAddress": "172.16.1.4",
                                "translatedPort": "80",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "52.178.156.115"
                                ],
                                "destinationPorts": [
                                    "80"
                                ]
                            }
                        ],
                        "name": "DNAT1-Nginx",
                        "priority": 101
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('firewallPolicies_fwpolicy1_name'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_fwpolicy1_name'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [],
                        "name": "allow_dns",
                        "priority": 101
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "dns",
                                "ipProtocols": [
                                    "UDP"
                                ],
                                "sourceAddresses": [
                                    "172.16.1.0/24"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "8.8.8.8"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "53"
                                ]
                            }
                        ],
                        "name": "dns",
                        "priority": 100
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkInterfaces_testvm974_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'VMs')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm974_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "172.16.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'VMs')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "8.8.8.8"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('routeTables_fw_route_table_name'), '/default_route')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_fw_route_table_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "172.16.2.4",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_HUB_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_fw_route_table_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.0.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "VMs",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'VMs')]",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.1.0/24"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_fw_route_table_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.2.0/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureFirewallManagementSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallManagementSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.2.64/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HUB_name'), '/AzureFirewallManagementSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "172.16.2.64/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HUB_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "172.16.2.0/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HUB_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "172.16.0.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2024-01-01",
            "name": "[parameters('connections_AZ_LAB_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_VPNGW_name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LGW_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_VPNGW_name'))]",
                    "properties": {}
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LGW_name'))]",
                    "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "enablePrivateLinkFastPath": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default",
                "gatewayCustomBgpIpAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkGateways_VPNGW_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GWIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_VPNGW_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GWIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "172.16.0.254",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_VPNGW_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HUB_name'), '/VMs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HUB_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_fw_route_table_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "172.16.1.0/24"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_fw_route_table_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2024-01-01",
            "name": "[parameters('azureFirewalls_azfw_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_fwmgmt_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallManagementSubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_fwip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallSubnet')]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_fwpolicy1_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "managementIpConfiguration": {
                    "name": "fwmgmt",
                    "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_azfw_name')), '/azureFirewallIpConfigurations/fwmgmt')]",
                    "properties": {
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_fwmgmt_name'))]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallManagementSubnet')]"
                        }
                    }
                },
                "ipConfigurations": [
                    {
                        "name": "fwip",
                        "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_azfw_name')), '/azureFirewallIpConfigurations/fwip')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_fwip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HUB_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_fwpolicy1_name'))]"
                }
            }
        }
    ]
}
